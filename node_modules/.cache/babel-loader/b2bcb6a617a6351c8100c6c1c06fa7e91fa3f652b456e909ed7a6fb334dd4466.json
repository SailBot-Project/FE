{"ast":null,"code":"var _jsxFileName = \"/Users/kwakhotaek/project/sailBot/practice/src/views/ui/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [cssContent, setCssContent] = useState(\"\");\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type === \"text/css\") {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setCssContent(event.target.result);\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"유효한 CSS 파일을 선택해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CSS \\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".css\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), cssContent && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC5C5\\uB85C\\uB4DC\\uB41C CSS \\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: \"#f4f4f4\",\n          padding: \"10px\",\n          borderRadius: \"4px\"\n        },\n        children: cssContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"lduYYay6QU1P9tdMwWPGE0YN0Yg=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","cssContent","setCssContent","handleFileChange","e","file","target","files","type","reader","FileReader","onload","event","result","readAsText","alert","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","marginTop","background","borderRadius","_c","$RefreshReg$"],"sources":["/Users/kwakhotaek/project/sailBot/practice/src/views/ui/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Register = () => {\n  const [cssContent, setCssContent] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file && file.type === \"text/css\") {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setCssContent(event.target.result);\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"유효한 CSS 파일을 선택해주세요.\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n      <h1>CSS 파일 업로드</h1>\n      <input type=\"file\" accept=\".css\" onChange={handleFileChange} />\n      {cssContent && (\n        <div style={{ marginTop: \"20px\" }}>\n          <h2>업로드된 CSS 내용</h2>\n          <pre\n            style={{\n              background: \"#f4f4f4\",\n              padding: \"10px\",\n              borderRadius: \"4px\",\n            }}\n          >\n            {cssContent}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,UAAU,EAAE;MACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;QACzBV,aAAa,CAACU,KAAK,CAACN,MAAM,CAACO,MAAM,CAAC;MACpC,CAAC;MACDJ,MAAM,CAACK,UAAU,CAACT,IAAI,CAAC;IACzB,CAAC,MAAM;MACLU,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKkB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACnDrB,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBzB,OAAA;MAAOU,IAAI,EAAC,MAAM;MAACgB,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEtB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DtB,UAAU,iBACTH,OAAA;MAAKkB,KAAK,EAAE;QAAEU,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,gBAChCrB,OAAA;QAAAqB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBzB,OAAA;QACEkB,KAAK,EAAE;UACLW,UAAU,EAAE,SAAS;UACrBV,OAAO,EAAE,MAAM;UACfW,YAAY,EAAE;QAChB,CAAE;QAAAT,QAAA,EAEDlB;MAAU;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CApCID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}